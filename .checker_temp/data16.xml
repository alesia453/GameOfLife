<?xml version="1.0"?>

<valgrindoutput>

<protocolversion>4</protocolversion>
<protocoltool>memcheck</protocoltool>

<preamble>
  <line>Memcheck, a memory error detector</line>
  <line>Copyright (C) 2002-2022, and GNU GPL'd, by Julian Seward et al.</line>
  <line>Using Valgrind-3.22.0 and LibVEX; rerun with -h for copyright info</line>
  <line>Command: /mnt/c/facultate/Anul 1/Sem 2/PA/gameoflife/a.out /mnt/c/facultate/Anul 1/Sem 2/PA/gameoflife/InputData/data16.in /mnt/c/facultate/Anul 1/Sem 2/PA/gameoflife/OutputData/data16.out</line>
</preamble>

<pid>38904</pid>
<ppid>38866</ppid>
<tool>memcheck</tool>

<args>
  <vargv>
    <exe>/usr/bin/valgrind.bin</exe>
    <arg>--leak-check=yes</arg>
    <arg>--xml=yes</arg>
    <arg>--xml-file=/mnt/c/facultate/Anul 1/Sem 2/PA/gameoflife/.checker_temp/data16.xml</arg>
  </vargv>
  <argv>
    <exe>/mnt/c/facultate/Anul 1/Sem 2/PA/gameoflife/a.out</exe>
    <arg>/mnt/c/facultate/Anul 1/Sem 2/PA/gameoflife/InputData/data16.in</arg>
    <arg>/mnt/c/facultate/Anul 1/Sem 2/PA/gameoflife/OutputData/data16.out</arg>
  </argv>
</args>

<status>
  <state>RUNNING</state>
  <time>00:00:00:00.070 </time>
</status>

<error>
  <unique>0x0</unique>
  <tid>1</tid>
  <kind>UninitCondition</kind>
  <what>Conditional jump or move depends on uninitialised value(s)</what>
  <stack>
    <frame>
      <ip>0x48467D1</ip>
      <obj>/usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x109327</ip>
      <obj>/mnt/c/facultate/Anul 1/Sem 2/PA/gameoflife/a.out</obj>
      <fn>reead</fn>
    </frame>
    <frame>
      <ip>0x109D5B</ip>
      <obj>/mnt/c/facultate/Anul 1/Sem 2/PA/gameoflife/a.out</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x1</unique>
  <tid>1</tid>
  <kind>UninitCondition</kind>
  <what>Conditional jump or move depends on uninitialised value(s)</what>
  <stack>
    <frame>
      <ip>0x10936D</ip>
      <obj>/mnt/c/facultate/Anul 1/Sem 2/PA/gameoflife/a.out</obj>
      <fn>reead</fn>
    </frame>
    <frame>
      <ip>0x109D5B</ip>
      <obj>/mnt/c/facultate/Anul 1/Sem 2/PA/gameoflife/a.out</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2</unique>
  <tid>1</tid>
  <kind>UninitCondition</kind>
  <what>Conditional jump or move depends on uninitialised value(s)</what>
  <stack>
    <frame>
      <ip>0x48467D1</ip>
      <obj>/usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x10935F</ip>
      <obj>/mnt/c/facultate/Anul 1/Sem 2/PA/gameoflife/a.out</obj>
      <fn>reead</fn>
    </frame>
    <frame>
      <ip>0x109D5B</ip>
      <obj>/mnt/c/facultate/Anul 1/Sem 2/PA/gameoflife/a.out</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x6</unique>
  <tid>1</tid>
  <kind>UninitCondition</kind>
  <what>Conditional jump or move depends on uninitialised value(s)</what>
  <stack>
    <frame>
      <ip>0x10943F</ip>
      <obj>/mnt/c/facultate/Anul 1/Sem 2/PA/gameoflife/a.out</obj>
      <fn>reead</fn>
    </frame>
    <frame>
      <ip>0x109D5B</ip>
      <obj>/mnt/c/facultate/Anul 1/Sem 2/PA/gameoflife/a.out</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x7</unique>
  <tid>1</tid>
  <kind>UninitCondition</kind>
  <what>Conditional jump or move depends on uninitialised value(s)</what>
  <stack>
    <frame>
      <ip>0x10942F</ip>
      <obj>/mnt/c/facultate/Anul 1/Sem 2/PA/gameoflife/a.out</obj>
      <fn>reead</fn>
    </frame>
    <frame>
      <ip>0x109D5B</ip>
      <obj>/mnt/c/facultate/Anul 1/Sem 2/PA/gameoflife/a.out</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x8</unique>
  <tid>1</tid>
  <kind>UninitValue</kind>
  <what>Use of uninitialised value of size 8</what>
  <stack>
    <frame>
      <ip>0x1093D6</ip>
      <obj>/mnt/c/facultate/Anul 1/Sem 2/PA/gameoflife/a.out</obj>
      <fn>reead</fn>
    </frame>
    <frame>
      <ip>0x109D5B</ip>
      <obj>/mnt/c/facultate/Anul 1/Sem 2/PA/gameoflife/a.out</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x9</unique>
  <tid>1</tid>
  <kind>UninitValue</kind>
  <what>Use of uninitialised value of size 8</what>
  <stack>
    <frame>
      <ip>0x109422</ip>
      <obj>/mnt/c/facultate/Anul 1/Sem 2/PA/gameoflife/a.out</obj>
      <fn>reead</fn>
    </frame>
    <frame>
      <ip>0x109D5B</ip>
      <obj>/mnt/c/facultate/Anul 1/Sem 2/PA/gameoflife/a.out</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x17</unique>
  <tid>1</tid>
  <kind>UninitCondition</kind>
  <what>Conditional jump or move depends on uninitialised value(s)</what>
  <stack>
    <frame>
      <ip>0x1094AD</ip>
      <obj>/mnt/c/facultate/Anul 1/Sem 2/PA/gameoflife/a.out</obj>
      <fn>reead</fn>
    </frame>
    <frame>
      <ip>0x109D5B</ip>
      <obj>/mnt/c/facultate/Anul 1/Sem 2/PA/gameoflife/a.out</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x18</unique>
  <tid>1</tid>
  <kind>UninitCondition</kind>
  <what>Conditional jump or move depends on uninitialised value(s)</what>
  <stack>
    <frame>
      <ip>0x48467D1</ip>
      <obj>/usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x109D6F</ip>
      <obj>/mnt/c/facultate/Anul 1/Sem 2/PA/gameoflife/a.out</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x19</unique>
  <tid>1</tid>
  <kind>UninitCondition</kind>
  <what>Conditional jump or move depends on uninitialised value(s)</what>
  <stack>
    <frame>
      <ip>0x109DDB</ip>
      <obj>/mnt/c/facultate/Anul 1/Sem 2/PA/gameoflife/a.out</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x1a</unique>
  <tid>1</tid>
  <kind>UninitCondition</kind>
  <what>Conditional jump or move depends on uninitialised value(s)</what>
  <stack>
    <frame>
      <ip>0x109550</ip>
      <obj>/mnt/c/facultate/Anul 1/Sem 2/PA/gameoflife/a.out</obj>
      <fn>writee</fn>
    </frame>
    <frame>
      <ip>0x109DF8</ip>
      <obj>/mnt/c/facultate/Anul 1/Sem 2/PA/gameoflife/a.out</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x1b</unique>
  <tid>1</tid>
  <kind>UninitCondition</kind>
  <what>Conditional jump or move depends on uninitialised value(s)</what>
  <stack>
    <frame>
      <ip>0x109645</ip>
      <obj>/mnt/c/facultate/Anul 1/Sem 2/PA/gameoflife/a.out</obj>
      <fn>WriteStack</fn>
    </frame>
    <frame>
      <ip>0x109E11</ip>
      <obj>/mnt/c/facultate/Anul 1/Sem 2/PA/gameoflife/a.out</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x1c</unique>
  <tid>1</tid>
  <kind>UninitCondition</kind>
  <what>Conditional jump or move depends on uninitialised value(s)</what>
  <stack>
    <frame>
      <ip>0x109E47</ip>
      <obj>/mnt/c/facultate/Anul 1/Sem 2/PA/gameoflife/a.out</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x1d</unique>
  <tid>1</tid>
  <kind>UninitCondition</kind>
  <what>Conditional jump or move depends on uninitialised value(s)</what>
  <stack>
    <frame>
      <ip>0x10969D</ip>
      <obj>/mnt/c/facultate/Anul 1/Sem 2/PA/gameoflife/a.out</obj>
      <fn>freespace</fn>
    </frame>
    <frame>
      <ip>0x109E68</ip>
      <obj>/mnt/c/facultate/Anul 1/Sem 2/PA/gameoflife/a.out</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>


<status>
  <state>FINISHED</state>
  <time>00:00:00:00.991 </time>
</status>

<errorcounts>
  <pair>
    <count>3</count>
    <unique>0x1d</unique>
  </pair>
  <pair>
    <count>1</count>
    <unique>0x1c</unique>
  </pair>
  <pair>
    <count>1</count>
    <unique>0x1b</unique>
  </pair>
  <pair>
    <count>1</count>
    <unique>0x1a</unique>
  </pair>
  <pair>
    <count>1</count>
    <unique>0x19</unique>
  </pair>
  <pair>
    <count>1</count>
    <unique>0x18</unique>
  </pair>
  <pair>
    <count>1</count>
    <unique>0x17</unique>
  </pair>
  <pair>
    <count>3</count>
    <unique>0x6</unique>
  </pair>
  <pair>
    <count>6</count>
    <unique>0x7</unique>
  </pair>
  <pair>
    <count>4</count>
    <unique>0x9</unique>
  </pair>
  <pair>
    <count>4</count>
    <unique>0x8</unique>
  </pair>
  <pair>
    <count>3</count>
    <unique>0x1</unique>
  </pair>
  <pair>
    <count>2</count>
    <unique>0x2</unique>
  </pair>
  <pair>
    <count>1</count>
    <unique>0x0</unique>
  </pair>
</errorcounts>

<suppcounts>
</suppcounts>

</valgrindoutput>

